---
import ThemeIcon from "@components/ThemeIcon.astro";
import NavLink from "@components/ui/links/NavLink.astro";
import enStrings from "@utils/navigation.ts";
import BrandLogo from "@components/BrandLogo.astro";

const strings = enStrings;
const homeUrl = "/";
---

<header
  class="sticky top-0 z-50 flex w-full flex-wrap text-sm md:flex-nowrap md:justify-start"
>
  <nav
    class="relative w-full border-b border-yellow-100/40 bg-white px-4 py-3 dark:border-neutral-700/40 dark:bg-slate-900 md:flex md:items-center md:justify-between md:px-6 md:py-0 lg:px-8"
    aria-label="Global"
  >
    <div class="flex items-center justify-between w-full md:w-auto">
      <!-- Brand logo -->
      <a
        class="flex-none rounded-lg text-xl font-bold outline-hidden ring-zinc-500 focus-visible:ring-3 dark:ring-zinc-200"
        href={homeUrl}
        aria-label="Brand"
      >
        <BrandLogo class="h-auto w-40" />
      </a>

      <!-- Mobile toggle -->
      <div class="flex items-center gap-3 md:hidden">
        <button
          id="mobile-toggle"
          type="button"
          class="flex h-8 w-8 items-center justify-center rounded-full text-neutral-600 hover:bg-neutral-200 dark:text-neutral-400 dark:hover:bg-neutral-700"
          aria-controls="mobile-menu"
          aria-label="Toggle navigation"
        >
          <svg id="icon-open" class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>
          </svg>
          <svg id="icon-close" class="hidden h-5 w-5" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
          </svg>
        </button>

        <span>
          <ThemeIcon />
        </span>
      </div>
    </div>

    <!-- Nav links -->
    <div
      id="mobile-menu"
      class="hidden w-full md:block md:w-auto"
    >
      <div
        class="mt-5 flex flex-col gap-4 md:mt-0 md:flex-row md:items-center md:justify-end md:gap-x-7"
      >
        {strings.navBarLinks.map((link) => {
          if (link.name === "Products") {
            return (
              <div class="relative">
                <button
                  type="button"
                  class="flex items-center font-medium text-neutral-600 hover:text-neutral-950 dark:text-neutral-400 dark:hover:text-neutral-50"
                  onclick="toggleDropdown(this)"
                >
                  Products
                  <svg
                    class="ms-2 h-4 w-4"
                    xmlns="http://www.w3.org/2000/svg"
                    fill="none"
                    viewBox="0 0 16 16"
                  >
                    <path
                      d="M2 5l6 6 6-6"
                      stroke="currentColor"
                      stroke-width="2"
                      stroke-linecap="round"
                    />
                  </svg>
                </button>

                <div
                  class="absolute left-0 top-full mt-2 hidden w-48 rounded-lg border border-neutral-200 bg-white shadow-md dark:border-neutral-700 dark:bg-neutral-800"
                >
                  <a href="/products/rubber-seals" class="block px-3 py-2 text-sm text-neutral-800 hover:bg-neutral-100 dark:text-neutral-300 dark:hover:bg-neutral-700">Rubber Seals</a>
                  <a href="/products/rolls" class="block px-3 py-2 text-sm text-neutral-800 hover:bg-neutral-100 dark:text-neutral-300 dark:hover:bg-neutral-700">Rolls</a>
                  <a href="/products/gear-coupling" class="block px-3 py-2 text-sm text-neutral-800 hover:bg-neutral-100 dark:text-neutral-300 dark:hover:bg-neutral-700">Gear Coupling</a>
                  <a href="/products/quick-release-couplings-qrc" class="block px-3 py-2 text-sm text-neutral-800 hover:bg-neutral-100 dark:text-neutral-300 dark:hover:bg-neutral-700">Quick Release Couplings (QRC)</a>
                  <a href="/products/oil-filling-and-filtering-units" class="block px-3 py-2 text-sm text-neutral-800 hover:bg-neutral-100 dark:text-neutral-300 dark:hover:bg-neutral-700">Oil Filling & Filtering Units</a>
                </div>
              </div>
            );
          } else {
            return <NavLink url={link.url} name={link.name} />;
          }
        })}

        <!-- Theme for desktop -->
        <span class="hidden md:inline-block">
          <ThemeIcon />
        </span>
      </div>
    </div>
  </nav>
</header>

<!-- Toggle Scripts -->
<script is:inline>
  // Mobile menu toggle
  const mobileToggle = document.getElementById("mobile-toggle");
  const mobileMenu = document.getElementById("mobile-menu");
  const iconOpen = document.getElementById("icon-open");
  const iconClose = document.getElementById("icon-close");

  mobileToggle?.addEventListener("click", () => {
    mobileMenu.classList.toggle("hidden");
    iconOpen.classList.toggle("hidden");
    iconClose.classList.toggle("hidden");
  });

  // Dropdown toggle
  function toggleDropdown(btn) {
    const menu = btn.nextElementSibling;
    menu.classList.toggle("hidden");
  }

  // Close dropdown if clicked outside
  document.addEventListener("click", (e) => {
    document.querySelectorAll("[onclick='toggleDropdown(this)']").forEach((btn) => {
      const menu = btn.nextElementSibling;
      if (!btn.contains(e.target) && !menu.contains(e.target)) {
        menu.classList.add("hidden");
      }
    });
  });
</script>